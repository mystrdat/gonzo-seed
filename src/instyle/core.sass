/*
  inStyleâ„¢
  github.com/salsita/inStyle
  2016 | MIT
  ============================== */

// Helpers
@function __listToString($list, $glue: '', $is-nested: false)
  $result: null
  @for $i from 1 through length($list)
    $e: nth($list, $i)
    @if type-of($e) == list
      $result: $result#{to-string($e, $glue, true)}
    @else
      $result: if($i != length($list) or $is-nested, $result#{$e}#{$glue}, $result#{$e})
  @return $result

@function __removeFromList($list, $value, $recursive: false)
  $result: ()
  @for $i from 1 through length($list)
    @if type-of(nth($list, $i)) == list and $recursive
      $result: append($result, remove(nth($list, $i), $value, $recursive))
    @else if nth($list, $i) != $value
      $result: append($result, nth($list, $i))
  @return $result

@function __isComponentInQuery($query, $component)
  $componentFound: false
  @each $chain in $query
    @if index($chain, $component)
      $componentFound: true
  @return $componentFound

// In mixin
=in($selectors)
  $final: ()
  $current: &
  $selectors: selector-parse($selectors)
  @each $selector in $selectors
    @if length($selector) > 1
      @error 'Selector \'#{$selector}\' is too long, not supported.'
    @else
      $simple: simple-selectors(inspect($selector))
      $component: nth($simple, 1)
      @if __isComponentInQuery($current, $component)
        @if length($simple) > 1
          $state: __listToString(__removeFromList($simple, $component))
        @else
          $state: ''
        @each $query in $current
          @if index($query, $component)
            $newQuery: selector-replace($query, $component, unquote($component + $state))
            $final: append($final, $newQuery, comma)
      @else
        @each $query in $current
          $newQuery: selector-parse($selector + ' ' + $query)
          $final: append($final, $newQuery, comma)
  @at-root #{$final}
    @content
