/*
  inStyleâ„¢
  github.com/salsita/inStyle
  2016 | MIT
  ============================== */

// Helpers
@function __listToString($list, $glue: '', $is-nested: false)
  $result: null
  @for $i from 1 through length($list)
    $e: nth($list, $i)
    @if type-of($e) == list
      $result: $result#{to-string($e, $glue, true)}
    @else
      $result: if($i != length($list) or $is-nested, $result#{$e}#{$glue}, $result#{$e})
  @return $result

@function __replaceInList($list, $old-value, $new-value, $recursive: false)
  $result: ()
  @for $i from 1 through length($list)
    @if type-of(nth($list, $i)) == list and $recursive
      $result: append($result, replace(nth($list, $i), $old-value, $new-value, $recursive))
    @else
      @if nth($list, $i) == $old-value
        $result: append($result, $new-value)
      @else
        $result: append($result, nth($list, $i))
  @return $result

@function __removeFromList($list, $value, $recursive: false)
  $result: ()
  @for $i from 1 through length($list)
    @if type-of(nth($list, $i)) == list and $recursive
      $result: append($result, remove(nth($list, $i), $value, $recursive))
    @else if nth($list, $i) != $value
      $result: append($result, nth($list, $i))
  @return $result

@function __reverseList($list, $recursive: false)
  $result: ()
  @for $i from length($list)*-1 through -1
    @if type-of(nth($list, abs($i))) == list and $recursive
      $result: append($result, reverse(nth($list, abs($i)), $recursive))
    @else
      $result: append($result, nth($list, abs($i)))
  @return $result

@function __isElementInSelector($selector, $element)
  @if index($selector, $element)
    @return true
  @else
    @return false

// In mixin
=in($selectors)
  $final: ()
  $current: &
  $selectors: selector-parse($selectors)
  @each $selector in $selectors
    $matchedIndexes: ()
    @each $parent in $current
      @each $component in $selector
        $simple: simple-selectors(inspect($component))
        $element: nth($simple, 1)
        @if __isElementInSelector($parent, $element)
          $matchedIndexes: append($matchedIndexes, index($current, $parent), comma)
    @if length($matchedIndexes) > 0
      @each $index in $matchedIndexes
        $currentSelector: nth($current, $index)
        $modifiedSelector: ()
        @each $component in __reverseList($selector)
          $simple: simple-selectors(inspect($component))
          $element: nth($simple, 1)
          $state: ''
          @if length($simple) > 1
            $state: __listToString(__removeFromList($simple, $element))
          @if __isElementInSelector($currentSelector, $element)
            $currentSelector: __replaceInList($currentSelector, $element, unquote($element + $state))
          @else
            $currentSelector: join($component, $currentSelector)
        $final: append($final, $currentSelector, comma)
    @else
      $final: append($final, selector-parse($selector + ' ' + $current), comma)
  @at-root #{$final}
    @content
